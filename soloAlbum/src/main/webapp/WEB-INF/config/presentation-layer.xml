<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	
<!-- ViewResolver 등록 
클라이언트가 브라우저에서 바로 .jsp 호출하여 페이지에 접근할 수 없도록 jsp 파일들을 WEB-INF 폴더의 board 폴더로 이동시켰다.
WEB-INF 폴더는 절대 브라우저에서 접근할 수 없다. 따라서 MVC 패턴으로 개발하려면 아래와 같이 InternalResourceViewResolver를 설정해주어야 한다.-->
<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix" value="/WEB-INF/photo/"></property>
	<property name="suffix" value=".jsp"></property>
</bean>

<!--  -->

<context:component-scan base-package="com.cj.view" use-default-filters="false">
	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>


<!-- JdbcTemplate 객체가 사용할 DataSource 설정 -->
<context:property-placeholder location="classpath:config/database.properties" />

<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="${jdbc.driverClassName}" />
	<property name="url" value="${jdbc.url}" />
	<property name="username" value="${jdbc.username}" />
	<property name="password" value="${jdbc.password}" />
</bean>

<!-- Spring JDBC 설정 -->
<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource" ref="dataSource" />
</bean>

<!-- 파일 업로드 설정 commons fileupload (apache 제공 파일 업로드 라이브러리) -->
<!-- id는 multipartResolver 고정이다. -->
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="maxUploadSize" value="90000000" />
</bean>

<!--  에외 처리 설정 
id는 exceptionResolver로 고정이다.
<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	<property name="exceptionMappings">
		<props>
			<prop key="java.lang.ArithmeticException">
				common/arithmeticError.jsp
			</prop>
			<prop key="java.lang.NullPointerException">
				common/nullPointerError.jsp
			</prop>
		</props>
	</property>
	<property name="defaultErrorView" value="common/error.jsp"></property>
</bean>

다국어 설정
	MessageSource등록 id는 messagesSource로 고정해야한다.
<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	<property name="basenames">
		<list> 아래 설정은 src/main/resources/message 의 파일 두개가 동시에 등록된다.  자세한 내용은 p441 참고
			<value>message.messageSource</value>
		</list>
	</property>
</bean>
	localeResolver 등록 id는 localeResolver로 고정해야한다.
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
	localeChangerInterceptor 등록
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"/>
		</bean>
	</mvc:interceptors>
	 -->
</beans>